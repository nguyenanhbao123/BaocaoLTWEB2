using Microsoft.EntityFrameworkCore;
using AnimalShop.API.Data;

var builder = WebApplication.CreateBuilder(args);

try
{
    // Add DbContext
    builder.Services.AddDbContext<AnimalShopDbContext>(options =>
        options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));

    // Add services to the container
    builder.Services.AddControllers();
}
catch (Exception ex)
{
    Console.WriteLine($"❌ ERROR during service configuration: {ex.Message}");
    Console.WriteLine($"Stack: {ex.StackTrace}");
    throw;
}

// Add Swagger/OpenAPI
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// Configure CORS to allow MVC project to access API
builder.Services.AddCors(options =>
{
    options.AddPolicy("AllowMVC", policy =>
    {
        policy.WithOrigins("http://localhost:5001", "https://localhost:7001", "http://localhost:5002")
              .AllowAnyHeader()
              .AllowAnyMethod();
    });
});

var app = builder.Build();

// Configure the HTTP request pipeline
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI(c =>
    {
        c.SwaggerEndpoint("/swagger/v1/swagger.json", "Animal Shop API v1");
        c.RoutePrefix = string.Empty; // Swagger UI at root
    });
}

// app.UseHttpsRedirection(); // Disabled for HTTP testing

app.UseCors("AllowMVC");

app.UseAuthorization();

app.MapControllers();

Console.WriteLine("API is running...");
Console.WriteLine("Test API at: https://localhost:7000/api/animals");

app.Run();
